{"version":3,"sources":["grid/show-grid.es6.js"],"names":["generateArray","length","Array","from","x","i","showGrid","columns","containerColumns","location","direction","options","neatElementColumns","neatGridColumns","debugGridLocation","neatDefaultDirection","columnsCount","directions","getDirection","columnWidth","flexWidth","neatColumnWidth","neatGutterWidth","columnGutter","flexGutter","gradient","reduce","memo","idx","startColor","endColor","startBlank","endBlank","push","debugGridColor","percentage","join"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,GAAgB;AAAA,MAAfC,MAAe,uEAAN,CAAM;;AACpC,SAAOC,MAAMC,IAAN,CAAW,IAAID,KAAJ,CAAUD,MAAV,CAAX,EAA8B,UAACG,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAV;AAAA,GAA9B,CAAP;AACD,CAFD;;AAIA,IAAIC,WAAW,SAAXA,QAAW,CAACC,OAAD,EAAUC,gBAAV,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAyE;AAAA,MAAxBC,OAAwB;;AACtFJ,YAAUA,WAAWI,QAAQC,kBAA7B;AACAJ,qBAAmBA,oBAAoBG,QAAQE,eAA/C;AACAJ,aAAWA,YAAYE,QAAQG,iBAA/B;AACAJ,cAAYA,aAAaC,QAAQI,oBAAjC;;AAEA,MAAIC,eAAe,EAAER,mBAAmBD,OAArB,CAAnB;AACA,MAAIU,aAAa,sBAAUC,YAAV,CAAuBR,SAAvB,CAAjB;AACA,MAAIS,cAAc,sBAAUC,SAAV,CAAoBb,OAApB,EAA6BC,gBAA7B,EAA+CG,QAAQU,eAAvD,EAAwEV,QAAQW,eAAhF,CAAlB;AACA,MAAIC,eAAe,sBAAUC,UAAV,CAAqBhB,gBAArB,EAAuCG,QAAQU,eAA/C,EAAgEV,QAAQW,eAAxE,CAAnB;;AAEA,MAAIG,WAAWzB,cAAcgB,YAAd,EAA4BU,MAA5B,CAAmC,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC/D,QAAIC,aAAaV,cAAcS,GAAd,GAAoBL,eAAeK,GAApD;AACA,QAAIE,WAAWX,eAAeS,MAAM,CAArB,IAA0BL,eAAeK,GAAxD;AACA,QAAIG,aAAaD,QAAjB;AACA,QAAIE,WAAWb,eAAeS,MAAM,CAArB,IAA0BL,gBAAgBK,MAAM,CAAtB,CAAzC;AACAD,SAAKM,IAAL,CAAatB,QAAQuB,cAArB,SAAuC,sBAAUC,UAAV,CAAqBN,UAArB,CAAvC,UAA4ElB,QAAQuB,cAApF,SAAsG,sBAAUC,UAAV,CAAqBL,QAArB,CAAtG;AACA,QAAIF,MAAMZ,eAAe,CAAzB,EAA4B;AAC1BW,WAAKM,IAAL,kBAAyB,sBAAUE,UAAV,CAAqBJ,UAArB,CAAzB,sBAA0E,sBAAUI,UAAV,CAAqBH,QAArB,CAA1E;AACD;AACD,WAAOL,IAAP;AACD,GAVc,EAUZ,CAACV,WAAWP,SAAX,KAAyB,OAAzB,GAAmC,UAAnC,GAAgD,SAAjD,CAVY,CAAf;;AAYA;AACA,MAAID,aAAa,YAAjB,EAA+B;AAC7B,WAAO;AACL,yCAAiCgB,SAASW,IAAT,CAAc,GAAd,CAAjC;AADK,KAAP;AAGD,GAJD,MAIO,IAAI3B,aAAa,QAAb,IAAyBA,aAAa,OAA1C,EAAmD;AACxD,sCACQA,QADR,EACqB;AACjB,yCAAiCgB,SAASW,IAAT,CAAc,GAAd,CAAjC,MADiB;AAEjB,gBAAU,GAFO;AAGjB,iBAAW,OAHM;AAIjB,cAAQ,GAJS;AAKjB,kBAAY,UALK;AAMjB,eAAS,GANQ;AAOjB,aAAO;AAPU,KADrB;AAWD;AACF,CAzCD;;kBA2Ce9B,Q","file":"grid/show-grid.es6.js","sourcesContent":["'use strict';\n\nimport variables from '../core/variables.es6.js';\nimport functions from '../core/functions.es6.js';\n\n// Creates a debugging grid for the parent of columns. Works in conjunction with `@neat-outer-container`.\n//\n// @columns\n//   The unitless number of columns the element spans. If is not passed, it is equal to `@neatElementColumns`.\n//   `@columns` also accepts decimals for when it's necessary to break out of the standard grid.\n//   E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n//\n// @container-columns\n//   The number of columns the parent element spans. If is not passed, it is equal to `@neatGridColumns`,\n//   the total number of columns in the grid.\n//\n// @location\n//   The location of where the grid will be applied to: ['before', 'after' or 'background']\n//\n// @example - PostCSS Usage\n//    .element {\n//      @neat-outer-container;\n//      @neat-show-grid 4 12;\n//    }\n//\n// @example - CSS Output\n//    .element {\n//      *zoom: 1;\n//      max-width: 128em;\n//      margin-left: auto;\n//      margin-right: auto;\n//    }\n//    .element:before,\n//    .element:after {\n//      content: \" \";\n//      display: table;\n//    }\n//    .element:after {\n//      clear: both;\n//      background: linear-gradient(to right,\n//        #ecf0f1 0, #ecf0f1 31.7615656%,\n//        transparent 31.7615656%, transparent 34.1192172%,\n//        #ecf0f1 34.1192172%, #ecf0f1 65.88078280%,\n//        transparent 65.88078280%, transparent 68.2384344%,\n//        #ecf0f1 68.2384344%, #ecf0f1 100%);\n//      bottom: 0;\n//      display: block;\n//      left: 0;\n//      position: absolute;\n//      right: 0;\n//      top: 0\n//    }\n//\n\nconst generateArray = (length = 0) => {\n  return Array.from(new Array(length), (x, i) => i);\n};\n\nlet showGrid = (columns, containerColumns, location, direction, options = variables) => {\n  columns = columns || options.neatElementColumns;\n  containerColumns = containerColumns || options.neatGridColumns;\n  location = location || options.debugGridLocation;\n  direction = direction || options.neatDefaultDirection;\n\n  let columnsCount = +(containerColumns / columns);\n  let directions = functions.getDirection(direction);\n  let columnWidth = functions.flexWidth(columns, containerColumns, options.neatColumnWidth, options.neatGutterWidth);\n  let columnGutter = functions.flexGutter(containerColumns, options.neatColumnWidth, options.neatGutterWidth);\n\n  let gradient = generateArray(columnsCount).reduce((memo, idx) => {\n    let startColor = columnWidth * idx + columnGutter * idx;\n    let endColor = columnWidth * (idx + 1) + columnGutter * idx;\n    let startBlank = endColor;\n    let endBlank = columnWidth * (idx + 1) + columnGutter * (idx + 1);\n    memo.push(`${options.debugGridColor} ${functions.percentage(startColor)}, ${options.debugGridColor} ${functions.percentage(endColor)}`);\n    if (idx < columnsCount - 1) {\n      memo.push(`transparent ${functions.percentage(startBlank)}, transparent ${functions.percentage(endBlank)}`);\n    }\n    return memo;\n  }, [directions.direction === 'right' ? 'to right' : 'to left']);\n\n  // 'before', 'after' or 'background'\n  if (location === 'background') {\n    return {\n      'background': `linear-gradient(${gradient.join(',')})`\n    };\n  } else if (location === 'before' || location === 'after') {\n    return {\n      [`&:${location}`]: {\n        'background': `linear-gradient(${gradient.join(',')})`,\n        'bottom': '0',\n        'display': 'block',\n        'left': '0',\n        'position': 'absolute',\n        'right': '0',\n        'top': '0'\n      }\n    };\n  }\n};\n\nexport default showGrid;\n"],"sourceRoot":"/source/"}